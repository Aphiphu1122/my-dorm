import type { Metadata } from "next";
import { Geist, Geist_Mono, Poppins } from "next/font/google";
import { Toaster } from "react-hot-toast";
import "./globals.css";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

const poppins = Poppins({
  variable: "--font-poppins",
  weight: ["100", "200", "300", "400", "500", "600", "700", "800", "900"],
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html
      lang="en"
      className={`${geistSans.variable} ${geistMono.variable} ${poppins.variable}`}
    >
      <head>
        <link
          href="https://cdn.jsdelivr.net/npm/remixicon@2.5.0/fonts/remixicon.css"
          rel="stylesheet"
        />
      </head>
      <body className="bg-white text-black antialiased min-h-screen">
        {children}
        <Toaster
        position="top-center"
        reverseOrder={false}
        toastOptions={{
          // ค่ามาตรฐานของทุก toast
          style: {
            background: '#333',
            color: '#fff',
            fontSize: '14px',
            borderRadius: '8px',
            padding: '12px 16px',
          },
          duration: 4000,

          // สำหรับ success โดยเฉพาะ
          success: {
            duration: 3000,
            style: {
              background: '#16a34a',
            },
            iconTheme: {
              primary: 'white',
              secondary: '#16a34a',
            },
          },

          // สำหรับ error โดยเฉพาะ
          error: {
            duration: 5000,
            style: {
              background: '#dc2626',
            },
            iconTheme: {
              primary: 'white',
              secondary: '#dc2626',
            },
          },
        }}
      /> 
      </body>
    </html>
  );
}

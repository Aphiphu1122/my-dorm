"use client";

import { useEffect, useState } from 'react';
import { useParams, useRouter } from 'next/navigation';
import Image from 'next/image';
import { toast } from 'react-hot-toast';

type BillStatus = "UNPAID" | "PENDING_APPROVAL" | "PAID";

type Bill = {
  id: string;
  billingMonth: string;
  rentAmount: number;
  waterUnit: number;
  waterRate: number;
  electricUnit: number;
  electricRate: number;
  totalAmount: number;
  status: BillStatus;
  paymentSlipUrl?: string;
  paymentDate?: string;
  transactionRef?: string;
  tenant: {
    firstName: string;
    lastName: string;
  };
  room: {
    roomNumber: string;
  };
};

export default function AdminBillDetailPage() {
  const { id } = useParams();
  const router = useRouter();
  const [bill, setBill] = useState<Bill | null>(null);
  const [loading, setLoading] = useState(true);
  const [updating, setUpdating] = useState(false);

  useEffect(() => {
    if (!id || typeof id !== 'string') return;

    const fetchBill = async () => {
      try {
        const res = await fetch(`/api/admin/bills/${id}`, {
          method: 'GET',
          credentials: 'include',
        });

        if (!res.ok) throw new Error('‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
        const data = await res.json();
        setBill(data.bill);
      } catch (err) {
        console.error('Fetch bill error:', err);
        toast.error('‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏¥‡∏•');
        router.push('/admin/bills');
      } finally {
        setLoading(false);
      }
    };

    fetchBill();
  }, [id, router]);

  const handleApprovePayment = async () => {
    if (!id || typeof id !== 'string') return;

    try {
      setUpdating(true);

      const res = await fetch(`/api/admin/bills/${id}`, {
        method: 'PATCH',
        headers: { 'Content-Type': 'application/json' },
        credentials: 'include',
        body: JSON.stringify({ status: 'PAID' }),
      });

      if (!res.ok) throw new Error();
      toast.success('‚úÖ ‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡πÅ‡∏•‡πâ‡∏ß');
      router.refresh();
    } catch {
      toast.error('‚ùå ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
    } finally {
      setUpdating(false);
    }
  };

  if (loading) return <p className="text-center mt-8">‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î...</p>;
  if (!bill) return <p className="text-center mt-8">‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏¥‡∏•</p>;

  const waterTotal = bill.waterUnit * bill.waterRate;
  const electricTotal = bill.electricUnit * bill.electricRate;

  const statusLabel = {
    UNPAID: "‚ùå ‡∏Ñ‡πâ‡∏≤‡∏á‡∏ä‡∏≥‡∏£‡∏∞",
    PENDING_APPROVAL: "‚è≥ ‡∏£‡∏≠‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö",
    PAID: "‚úÖ ‡∏ä‡∏≥‡∏£‡∏∞‡πÅ‡∏•‡πâ‡∏ß",
  };

 return (
    <div className="max-w-3xl mx-auto mt-8 p-6 bg-white text-black rounded shadow">
      <h1 className="text-2xl font-bold mb-4">‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏ö‡∏¥‡∏•</h1>

      <div className="space-y-2">
        <p>üë§ ‡∏ú‡∏π‡πâ‡πÄ‡∏ä‡πà‡∏≤: {bill.tenant.firstName} {bill.tenant.lastName}</p>
        <p>üè† ‡∏´‡πâ‡∏≠‡∏á‡∏û‡∏±‡∏Å: {bill.room.roomNumber}</p>
        <p>üóì ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô: {new Date(bill.billingMonth).toLocaleDateString("th-TH", { year: "numeric", month: "long" })}</p>
        <p>üíß ‡∏ô‡πâ‡∏≥: {bill.waterUnit} ‡∏´‡∏ô‡πà‡∏ß‡∏¢ x {bill.waterRate} ‡∏ö‡∏≤‡∏ó = {waterTotal.toLocaleString()} ‡∏ö‡∏≤‡∏ó</p>
        <p>‚ö° ‡πÑ‡∏ü‡∏ü‡πâ‡∏≤: {bill.electricUnit} ‡∏´‡∏ô‡πà‡∏ß‡∏¢ x {bill.electricRate} ‡∏ö‡∏≤‡∏ó = {electricTotal.toLocaleString()} ‡∏ö‡∏≤‡∏ó</p>
        <p>üíµ ‡∏Ñ‡πà‡∏≤‡πÄ‡∏ä‡πà‡∏≤: {bill.rentAmount.toLocaleString()} ‡∏ö‡∏≤‡∏ó</p>
        <p className="font-bold">üí∞ ‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: {bill.totalAmount.toLocaleString()} ‡∏ö‡∏≤‡∏ó</p>
        <p>üìå ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô: {statusLabel[bill.status]}</p>
      </div>

      {bill.status === "PENDING_APPROVAL" && (
        <div className="mt-6">
          <button
            onClick={handleApprovePayment}
            disabled={updating}
            className="px-4 py-2 bg-green-600 text-white rounded hover:bg-green-700 disabled:opacity-50"
          >
            {updating ? "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥..." : "‚úÖ ‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô"}
          </button>
        </div>
      )}

      {bill.paymentSlipUrl && (
        <div className="mt-8 border-t pt-6">
          <h2 className="text-lg font-semibold mb-3 text-blue-700">üßæ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô</h2>

          <div className="mb-2">
            <span className="font-medium">‡πÄ‡∏•‡∏Ç‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á (Transaction Ref): </span>
            <span>{bill.transactionRef}</span>
          </div>

          <div className="mb-4">
            <span className="font-medium">‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô: </span>
            <span>{bill.paymentDate ? new Date(bill.paymentDate).toLocaleString("th-TH") : "-"}</span>
          </div>

          <Image
            src={bill.paymentSlipUrl}
            alt="‡∏™‡∏•‡∏¥‡∏õ‡πÇ‡∏≠‡∏ô"
            width={500}
            height={300}
            className="rounded border"
            unoptimized
          />
        </div>
      )}
    </div>
  );
}
